{
    "openapi": "3.0.3",
    "info": {
        "title": "Kanbanaza RESTful API",
        "description": "This is the backend for the Kanbananza Kanban board tool.",
        "contact": {
            "name": "GitHub repository",
            "url": "https://github.com/RemiCarriere/ecse-428-kanbananza"
        },
        "version": "1.0.0",
    },
    "servers": [
        {
            "url": "https://kanbananza-backend.herokuapp.com",
            "description": "Production server"
        }
    ],
    "components": {
        "schemas": {
            "HttpError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "reasonPhrase": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    }
                }
            },
            "Board": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "ownerId": {
                        "type": "string"
                    }
                }
            }
        },
        "parameters": {
            "idParam": {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "boardNameParam": {
                "name": "name",
                "in": "query",
                "description": "The name by which to filter the boards from the system",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "userNameParam": {
                "name": "name",
                "in": "query",
                "description": "The name by which to filter the users from the system matching firstName or lastName",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "limitParam": {
                "name": "limit",
                "in": "query",
                "description": "The maximum number of records to return",
                "required": false,
                "schema": {
                    "type": "integer",
                }
            },
            "offsetParam": {
                "name": "offset",
                "in": "query",
                "description": "The number of records to skip",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            }
        },
        "responses": {
            "HttpError": {
                "description": "General HTTP Error payload",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/HttpError"
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/users": {
            "get": {
                "description": "Returns users from the system that the user has access to",
                "operationId": "getUsers",
                "responses": {
                    "200": {
                        "description": "A list of existing users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/response/HttpError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/userNameParam"
                    }
                ]
            },
            "post": {
                "description": "Creates a user in the system with form data",
                "operationId": "postUser",
                "responses": {
                    "201": {
                        "description": "The created user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/response/HttpError"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Returns an existing user from the system based on ID",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "The user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/response/HttpError"
                    }
                }
            },
            "put": {
                "description": "Updates an existing user in the system based on ID with complete form data",
                "operationId": "putUser",
                "responses": {
                    "200": {
                        "description": "The updated user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/response/HttpError"
                    }
                }
            },
            "patch": {
                "description": "Updates an existing user in the system based on ID with partial form data",
                "operationId": "patchUser",
                "responses": {
                    "200": {
                        "description": "The updated user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/response/HttpError"
                    }
                }
            }
        },
        "/users/email/{email}": {
            "get": {
                "description": "Returns an existing user from the system based on email",
                "operationId": "getUserByEmail",
                "responses": {
                    "200": {
                        "description": "The user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/response/HttpError"
                    }
                }
            }
        },
        "/users/{id}/boards": {
            "get": {
                "description": "Returns the boards from the system based on the ID of their existing owner user",
                "operationId": "getUserBoards",
                "responses": {
                    "200": {
                        "description": "A list of existing boards",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Board"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/response/HttpError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/boardNameParam"
                    }
                ]
            }
        },
        "/boards": {
            "get": {
                "description": "Returns boards from the system that the user based on ID has access to",
                "operationId": "getBoards",
                "responses": {
                    "200": {
                        "description": "A list of existing boards",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Board"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/response/HttpError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/boardNameParam"
                    }
                ]
            },
            "post": {
                "description": "Creates a board in the system with form data",
                "operationId": "postBoard",
                "responses": {
                    "201": {
                        "description": "The created board",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Board"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/response/HttpError"
                    }
                }
            }
        },
        "/boards/{id}": {
            "get": {
                "description": "Returns an existing board from the system based on ID",
                "operationId": "getBoard",
                "responses": {
                    "200": {
                        "description": "The board",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Board"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing board in the system based on ID with complete form data",
                "operationId": "putBoard",
                "responses": {
                    "200": {
                        "description": "The updated board",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Board"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/response/HttpError"
                    }
                }
            },
            "patch": {
                "description": "Updates an existing board in the system based on ID with partial form data",
                "operationId": "patchBoard",
                "responses": {
                    "200": {
                        "description": "The updated board",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Board"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/response/HttpError"
                    }
                }
            },
            "delete": {
                "description": "Delete an existing board in the system based on ID",
                "operationId": "deleteBoard",
                "responses": {
                    "204": {
                        "description": "No-content response indicating succesful deletion of the board"
                    },
                    "default": {
                        "$ref": "#/components/response/HttpError"
                    }
                }
            }
        },
        "/boards/{id}/columns": {
            "get": {
                "description": "Returns the columns from the system based on the ID of their existing board",
                "operationId": "getBoardColumns",
                "responses": {
                    "200": {
                        "description": "A list of columns",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Column"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/response/HttpError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/columnNameParam"
                    },
                    {
                        "$ref": "#/components/parameters/columnOrderParam"
                    }
                ]
            }
        },
        "/columns": {
            
        }
    }
}